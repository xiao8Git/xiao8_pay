<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	>

	<tx:annotation-driven />

	<bean id="poolDataSource"  abstract="true">
    <property name="filters" value="stat" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="20" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="1" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="60000" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="10" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="60000" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="300000" />  
         <property name="validationQuery" value="SELECT 'x'" />  
         <property name="testWhileIdle" value="true" />  
         <property name="testOnBorrow" value="false" />  
         <property name="testOnReturn" value="false" />  
         <property name="maxOpenPreparedStatements" value="20" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="true" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="1800" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="true" />
</bean> 

	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  parent="poolDataSource">  
	
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

	</bean>
	
	<!-- mybatis configuration -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"  value="classpath:mybatis/mapper/*.xml" />
		<property name="configLocation" value="classpath:mybatis/mybaits-cfg.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
				    <property name="properties">
				        <value>dialect=mysql</value>
				    </property>
				</bean>			    
			</array>		    
		</property>
	</bean>
	
	<!-- transaction configuration -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!-- 不使用批量操作,会造成同事物中不能获取前一条存取的数据ID
		<constructor-arg index="1" value="BATCH" />  -->
	</bean>
	
	

	
</beans>